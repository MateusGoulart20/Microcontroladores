CCS PCM C Compiler, Version 4.104, 5967               10-out-23 18:29

               Filename: C:\Users\mateu\Desktop\2023-2\Microcontroladores\PCW\prova1_item1\main.lst

               ROM used: 508 words (6%)
                         Largest free fragment is 2048
               RAM used: 6 (2%) at main() level
                         26 (7%) worst case
               Stack:    3 locations

*
0000:  MOVLW  01
0001:  MOVWF  0A
0002:  GOTO   158
0003:  NOP
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT 
.................... #FUSES HS 
.................... #FUSES NOPUT 
.................... #FUSES NOPROTECT 
.................... #FUSES NODEBUG 
.................... #FUSES BROWNOUT 
.................... #FUSES NOLVP 
.................... #FUSES NOCPD 
.................... #FUSES NOWRT 
....................  
.................... #use delay(clock=20000000) 
*
0013:  MOVLW  21
0014:  MOVWF  04
0015:  BCF    03.7
0016:  MOVF   00,W
0017:  BTFSC  03.2
0018:  GOTO   026
0019:  MOVLW  06
001A:  MOVWF  78
001B:  CLRF   77
001C:  DECFSZ 77,F
001D:  GOTO   01C
001E:  DECFSZ 78,F
001F:  GOTO   01B
0020:  MOVLW  7B
0021:  MOVWF  77
0022:  DECFSZ 77,F
0023:  GOTO   022
0024:  DECFSZ 00,F
0025:  GOTO   019
0026:  BCF    0A.3
0027:  BCF    0A.4
0028:  GOTO   1F7 (RETURN)
*
003E:  MOVLW  03
003F:  SUBWF  31,F
0040:  BTFSS  03.0
0041:  GOTO   04C
0042:  MOVLW  31
0043:  MOVWF  04
0044:  BCF    03.7
0045:  MOVF   00,W
0046:  BTFSC  03.2
0047:  GOTO   04C
0048:  GOTO   04A
0049:  GOTO   04A
004A:  DECFSZ 00,F
004B:  GOTO   049
004C:  RETURN
....................  
.................... byte const num[11]={ 
....................    0b00111111,  //0 
....................    0b00000110,  //1 
....................    0b01011011,  //2 
....................    0b01001111,  //3 
....................    0b01100110,  //4       
....................    0b01101101,  //5  
....................    0b01111101,  //6  
....................    0b00000111,  //7  
....................    0b01111111,  //8 
....................    0b01101111   //9       
.................... };  
....................        
....................  
.................... int passo(){ 
....................    int x= read_adc(); 
....................    int b = (x*200/255)+100; 
....................    return b; 
.................... } 
....................  
.................... void time(int y, int x){ 
....................    if(y == 1){ 
004D:  DECFSZ 2E,W
004E:  GOTO   066
....................       output_high(PIN_A2); 
004F:  BSF    03.5
0050:  BCF    05.2
0051:  BCF    03.5
0052:  BSF    05.2
....................       output_d(num[x]); 
0053:  MOVF   2F,W
0054:  CALL   004
0055:  MOVWF  30
0056:  BSF    03.5
0057:  CLRF   08
0058:  BCF    03.5
0059:  MOVF   30,W
005A:  MOVWF  08
....................       delay_us(500); 
005B:  MOVLW  02
005C:  MOVWF  30
005D:  MOVLW  F9
005E:  MOVWF  31
005F:  CALL   03E
0060:  DECFSZ 30,F
0061:  GOTO   05D
....................       output_low(PIN_A2); 
0062:  BSF    03.5
0063:  BCF    05.2
0064:  BCF    03.5
0065:  BCF    05.2
....................    } 
....................    if(y == 2){ 
0066:  MOVF   2E,W
0067:  SUBLW  02
0068:  BTFSS  03.2
0069:  GOTO   081
....................       output_high(PIN_A3); 
006A:  BSF    03.5
006B:  BCF    05.3
006C:  BCF    03.5
006D:  BSF    05.3
....................       output_d(num[x]); 
006E:  MOVF   2F,W
006F:  CALL   004
0070:  MOVWF  30
0071:  BSF    03.5
0072:  CLRF   08
0073:  BCF    03.5
0074:  MOVF   30,W
0075:  MOVWF  08
....................       delay_us(500); 
0076:  MOVLW  02
0077:  MOVWF  30
0078:  MOVLW  F9
0079:  MOVWF  31
007A:  CALL   03E
007B:  DECFSZ 30,F
007C:  GOTO   078
....................       output_low(PIN_A3); 
007D:  BSF    03.5
007E:  BCF    05.3
007F:  BCF    03.5
0080:  BCF    05.3
....................    } 
....................    if(y == 3){ 
0081:  MOVF   2E,W
0082:  SUBLW  03
0083:  BTFSS  03.2
0084:  GOTO   09C
....................       output_high(PIN_A4); 
0085:  BSF    03.5
0086:  BCF    05.4
0087:  BCF    03.5
0088:  BSF    05.4
....................       output_d(num[x]); 
0089:  MOVF   2F,W
008A:  CALL   004
008B:  MOVWF  30
008C:  BSF    03.5
008D:  CLRF   08
008E:  BCF    03.5
008F:  MOVF   30,W
0090:  MOVWF  08
....................       delay_us(500); 
0091:  MOVLW  02
0092:  MOVWF  30
0093:  MOVLW  F9
0094:  MOVWF  31
0095:  CALL   03E
0096:  DECFSZ 30,F
0097:  GOTO   093
....................       output_low(PIN_A4); 
0098:  BSF    03.5
0099:  BCF    05.4
009A:  BCF    03.5
009B:  BCF    05.4
....................    } 
....................    if(y == 4){ 
009C:  MOVF   2E,W
009D:  SUBLW  04
009E:  BTFSS  03.2
009F:  GOTO   0B7
....................       output_high(PIN_A5); 
00A0:  BSF    03.5
00A1:  BCF    05.5
00A2:  BCF    03.5
00A3:  BSF    05.5
....................       output_d(num[x]); 
00A4:  MOVF   2F,W
00A5:  CALL   004
00A6:  MOVWF  30
00A7:  BSF    03.5
00A8:  CLRF   08
00A9:  BCF    03.5
00AA:  MOVF   30,W
00AB:  MOVWF  08
....................       delay_us(500); 
00AC:  MOVLW  02
00AD:  MOVWF  30
00AE:  MOVLW  F9
00AF:  MOVWF  31
00B0:  CALL   03E
00B1:  DECFSZ 30,F
00B2:  GOTO   0AE
....................       output_low(PIN_A5); 
00B3:  BSF    03.5
00B4:  BCF    05.5
00B5:  BCF    03.5
00B6:  BCF    05.5
....................    } 
.................... } 
00B7:  RETURN
.................... void timer(int x, int y){ 
....................    unsigned int16 ds, un, tempo, pas, adc; 
....................    while(x>=y){ 
*
00BB:  MOVF   23,W
00BC:  SUBWF  22,W
00BD:  BTFSS  03.0
00BE:  GOTO   155
....................       ds = x/10; 
00BF:  MOVF   22,W
00C0:  MOVWF  2E
00C1:  MOVLW  0A
00C2:  MOVWF  2F
00C3:  CALL   029
00C4:  CLRF   25
00C5:  MOVF   78,W
00C6:  MOVWF  24
....................       un = x%10; 
00C7:  MOVF   22,W
00C8:  MOVWF  2E
00C9:  MOVLW  0A
00CA:  MOVWF  2F
00CB:  CALL   029
00CC:  CLRF   27
00CD:  MOVF   77,W
00CE:  MOVWF  26
....................       adc = read_adc(); 
00CF:  BSF    1F.2
00D0:  BTFSC  1F.2
00D1:  GOTO   0D0
00D2:  MOVF   1E,W
00D3:  CLRF   2D
00D4:  MOVWF  2C
....................       pas = (adc*200/255)+100; 
00D5:  MOVF   2D,W
00D6:  MOVWF  2F
00D7:  MOVF   2C,W
00D8:  MOVWF  2E
00D9:  CLRF   31
00DA:  MOVLW  C8
00DB:  MOVWF  30
*
00F0:  MOVF   79,W
00F1:  MOVWF  2F
00F2:  MOVF   78,W
00F3:  MOVWF  2E
00F4:  MOVF   2F,W
00F5:  MOVWF  31
00F6:  MOVF   2E,W
00F7:  MOVWF  30
00F8:  CLRF   33
00F9:  MOVLW  FF
00FA:  MOVWF  32
*
011F:  MOVLW  64
0120:  ADDWF  78,W
0121:  MOVWF  2A
0122:  MOVF   79,W
0123:  MOVWF  2B
0124:  BTFSC  03.0
0125:  INCF   2B,F
....................       //pas = 1000; // máximo 
....................       //pas = 3000; // máximo 
....................       for(tempo=0;tempo<pas;tempo++){ 
0126:  CLRF   29
0127:  CLRF   28
0128:  MOVF   29,W
0129:  SUBWF  2B,W
012A:  BTFSS  03.0
012B:  GOTO   14A
012C:  BTFSS  03.2
012D:  GOTO   132
012E:  MOVF   2A,W
012F:  SUBWF  28,W
0130:  BTFSC  03.0
0131:  GOTO   14A
....................          time(3,ds); 
0132:  MOVLW  03
0133:  MOVWF  2E
0134:  MOVF   24,W
0135:  MOVWF  2F
0136:  CALL   04D
....................          output_toggle(PIN_B4); 
0137:  BSF    03.5
0138:  BCF    06.4
0139:  MOVLW  10
013A:  BCF    03.5
013B:  XORWF  06,F
....................          time(4,un); 
013C:  MOVLW  04
013D:  MOVWF  2E
013E:  MOVF   26,W
013F:  MOVWF  2F
0140:  CALL   04D
....................          output_toggle(PIN_B4); 
0141:  BSF    03.5
0142:  BCF    06.4
0143:  MOVLW  10
0144:  BCF    03.5
0145:  XORWF  06,F
....................          // soma de 10ms = 0.001s = 10ms 
....................       } 
0146:  INCF   28,F
0147:  BTFSC  03.2
0148:  INCF   29,F
0149:  GOTO   128
....................       output_toggle(PIN_B5); 
014A:  BSF    03.5
014B:  BCF    06.5
014C:  MOVLW  20
014D:  BCF    03.5
014E:  XORWF  06,F
....................       x--; 
014F:  DECF   22,F
....................       if(x == -1) break; 
0150:  MOVF   22,W
0151:  SUBLW  FF
0152:  BTFSC  03.2
0153:  GOTO   155
....................    } 
0154:  GOTO   0BB
.................... } 
.................... void timer(int x){ 
....................    timer(x,0); 
*
00B8:  MOVF   21,W
00B9:  MOVWF  22
00BA:  CLRF   23
.................... } 
*
0155:  BCF    0A.3
0156:  BCF    0A.4
0157:  GOTO   1FA (RETURN)
....................  
.................... void main() 
.................... { 
0158:  CLRF   04
0159:  BCF    03.7
015A:  MOVLW  1F
015B:  ANDWF  03,F
015C:  BSF    03.5
015D:  BSF    1F.0
015E:  BSF    1F.1
015F:  BSF    1F.2
0160:  BCF    1F.3
0161:  MOVLW  07
0162:  MOVWF  1C
....................  
....................    setup_adc_ports(AN0_AN1_AN3); 
*
0166:  BSF    03.5
0167:  BCF    1F.0
0168:  BCF    1F.1
0169:  BSF    1F.2
016A:  BCF    1F.3
....................    setup_adc(ADC_CLOCK_DIV_2); 
016B:  BCF    1F.6
016C:  BCF    03.5
016D:  BCF    1F.6
016E:  BCF    1F.7
016F:  BSF    03.5
0170:  BCF    1F.7
0171:  BCF    03.5
0172:  BSF    1F.0
....................    setup_psp(PSP_DISABLED); 
0173:  BSF    03.5
0174:  BCF    09.4
....................    setup_spi(SPI_SS_DISABLED); 
0175:  BCF    03.5
0176:  BCF    14.5
0177:  BCF    20.5
0178:  MOVF   20,W
0179:  BSF    03.5
017A:  MOVWF  07
017B:  BCF    03.5
017C:  BSF    20.4
017D:  MOVF   20,W
017E:  BSF    03.5
017F:  MOVWF  07
0180:  BCF    03.5
0181:  BCF    20.3
0182:  MOVF   20,W
0183:  BSF    03.5
0184:  MOVWF  07
0185:  MOVLW  01
0186:  BCF    03.5
0187:  MOVWF  14
0188:  MOVLW  00
0189:  BSF    03.5
018A:  MOVWF  14
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
018B:  MOVF   01,W
018C:  ANDLW  C7
018D:  IORLW  08
018E:  MOVWF  01
....................    setup_timer_1(T1_DISABLED); 
018F:  BCF    03.5
0190:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
0191:  MOVLW  00
0192:  MOVWF  78
0193:  MOVWF  12
0194:  MOVLW  00
0195:  BSF    03.5
0196:  MOVWF  12
....................    setup_comparator(NC_NC_NC_NC); 
0197:  MOVLW  07
0198:  MOVWF  1C
0199:  MOVF   05,W
019A:  MOVWF  05
019B:  MOVLW  10
019C:  MOVWF  77
019D:  DECFSZ 77,F
019E:  GOTO   19D
019F:  NOP
01A0:  MOVF   1C,W
01A1:  BCF    03.5
01A2:  BCF    0D.6
....................    setup_vref(FALSE); 
01A3:  BSF    03.5
01A4:  CLRF   1D
....................  
....................    // TODO: USER CODE!! 
....................    output_low(PIN_D0); 
01A5:  BCF    08.0
01A6:  BCF    03.5
01A7:  BCF    08.0
....................    output_low(PIN_D1); 
01A8:  BSF    03.5
01A9:  BCF    08.1
01AA:  BCF    03.5
01AB:  BCF    08.1
....................    output_low(PIN_D2); 
01AC:  BSF    03.5
01AD:  BCF    08.2
01AE:  BCF    03.5
01AF:  BCF    08.2
....................    output_low(PIN_D3); 
01B0:  BSF    03.5
01B1:  BCF    08.3
01B2:  BCF    03.5
01B3:  BCF    08.3
....................    output_low(PIN_D4); 
01B4:  BSF    03.5
01B5:  BCF    08.4
01B6:  BCF    03.5
01B7:  BCF    08.4
....................    output_low(PIN_D5); 
01B8:  BSF    03.5
01B9:  BCF    08.5
01BA:  BCF    03.5
01BB:  BCF    08.5
....................    output_low(PIN_D6); 
01BC:  BSF    03.5
01BD:  BCF    08.6
01BE:  BCF    03.5
01BF:  BCF    08.6
....................    output_low(PIN_D7); 
01C0:  BSF    03.5
01C1:  BCF    08.7
01C2:  BCF    03.5
01C3:  BCF    08.7
....................    output_low(PIN_B0); 
01C4:  BSF    03.5
01C5:  BCF    06.0
01C6:  BCF    03.5
01C7:  BCF    06.0
....................    output_low(PIN_B1); 
01C8:  BSF    03.5
01C9:  BCF    06.1
01CA:  BCF    03.5
01CB:  BCF    06.1
....................    output_low(PIN_B2); 
01CC:  BSF    03.5
01CD:  BCF    06.2
01CE:  BCF    03.5
01CF:  BCF    06.2
....................    output_low(PIN_B3); 
01D0:  BSF    03.5
01D1:  BCF    06.3
01D2:  BCF    03.5
01D3:  BCF    06.3
....................    output_low(PIN_B4); 
01D4:  BSF    03.5
01D5:  BCF    06.4
01D6:  BCF    03.5
01D7:  BCF    06.4
....................    output_low(PIN_B5); 
01D8:  BSF    03.5
01D9:  BCF    06.5
01DA:  BCF    03.5
01DB:  BCF    06.5
....................    output_low(PIN_B6); 
01DC:  BSF    03.5
01DD:  BCF    06.6
01DE:  BCF    03.5
01DF:  BCF    06.6
....................    output_low(PIN_B7); 
01E0:  BSF    03.5
01E1:  BCF    06.7
01E2:  BCF    03.5
01E3:  BCF    06.7
....................     
....................    output_low(PIN_A4); 
01E4:  BSF    03.5
01E5:  BCF    05.4
01E6:  BCF    03.5
01E7:  BCF    05.4
....................    //output_low(PIN_A5); 
....................    output_high(PIN_C2); 
01E8:  BCF    20.2
01E9:  MOVF   20,W
01EA:  BSF    03.5
01EB:  MOVWF  07
01EC:  BCF    03.5
01ED:  BSF    07.2
....................    output_high(PIN_C1); 
01EE:  BCF    20.1
01EF:  MOVF   20,W
01F0:  BSF    03.5
01F1:  MOVWF  07
01F2:  BCF    03.5
01F3:  BSF    07.1
....................     
....................    delay_ms(100); 
01F4:  MOVLW  64
01F5:  MOVWF  21
01F6:  GOTO   013
....................        
....................    //unsigned int8 passo = 0; 
....................    while(true){ 
....................       
....................       //passo = read_adc(); 
....................        //output_d(passo); 
....................        
....................        
....................       timer(99); // tempo de troca 
01F7:  MOVLW  63
01F8:  MOVWF  21
01F9:  GOTO   0B8
....................  
....................        
....................        
....................        
....................        
....................    } 
01FA:  GOTO   1F7
.................... } 
....................  
01FB:  SLEEP

Configuration Fuses:
   Word  1: 3F7A   HS NOWDT NOPUT NODEBUG NOPROTECT BROWNOUT NOLVP NOCPD NOWRT
