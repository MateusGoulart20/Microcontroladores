CCS PCM C Compiler, Version 4.104, 5967               27-set-23 16:33

               Filename: C:\Users\mateu\Desktop\2023-2\Microcontroladores\PCW\pwm_e_ad\pwm_e_ad.lst

               ROM used: 135 words (2%)
                         Largest free fragment is 2048
               RAM used: 8 (2%) at main() level
                         8 (2%) worst case
               Stack:    0 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device adc=10 
.................... #FUSES NOWDT //No Watch Dog Timer 
.................... #FUSES HS //High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOPUT //No Power Up Timer 
.................... #FUSES NOPROTECT //Code not protected from reading 
.................... #FUSES NODEBUG //No Debug mode for ICD 
.................... #FUSES NOBROWNOUT //No brownout reset 
.................... #FUSES NOLVP //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD //No EE protection 
.................... #FUSES NOWRT //Program memory not write protected 
.................... #FUSES RESERVED //Used to set the reserved FUSE bits 
.................... #use delay(clock=20000000) 
.................... void main() 
.................... { 
*
0004:  CLRF   04
0005:  BCF    03.7
0006:  MOVLW  1F
0007:  ANDWF  03,F
0008:  BSF    03.5
0009:  BSF    1F.0
000A:  BSF    1F.1
000B:  BSF    1F.2
000C:  BCF    1F.3
000D:  MOVLW  07
000E:  MOVWF  1C
*
0012:  CLRF   22
0013:  CLRF   21
....................  unsigned int16 value=0; 
....................  
....................  setup_adc_ports(AN0); 
0014:  BSF    03.5
0015:  BCF    1F.0
0016:  BSF    1F.1
0017:  BSF    1F.2
0018:  BSF    1F.3
....................  setup_adc(ADC_CLOCK_DIV_16); 
0019:  BSF    1F.6
001A:  BCF    03.5
001B:  BSF    1F.6
001C:  BCF    1F.7
001D:  BSF    03.5
001E:  BSF    1F.7
001F:  BCF    03.5
0020:  BSF    1F.0
....................  
....................  
....................  setup_psp(PSP_DISABLED); 
0021:  BSF    03.5
0022:  BCF    09.4
....................  setup_spi(SPI_SS_DISABLED); 
0023:  BCF    03.5
0024:  BCF    14.5
0025:  BCF    20.5
0026:  MOVF   20,W
0027:  BSF    03.5
0028:  MOVWF  07
0029:  BCF    03.5
002A:  BSF    20.4
002B:  MOVF   20,W
002C:  BSF    03.5
002D:  MOVWF  07
002E:  BCF    03.5
002F:  BCF    20.3
0030:  MOVF   20,W
0031:  BSF    03.5
0032:  MOVWF  07
0033:  MOVLW  01
0034:  BCF    03.5
0035:  MOVWF  14
0036:  MOVLW  00
0037:  BSF    03.5
0038:  MOVWF  14
....................  setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
0039:  MOVF   01,W
003A:  ANDLW  C7
003B:  IORLW  08
003C:  MOVWF  01
....................  setup_timer_1(T1_DISABLED); 
003D:  BCF    03.5
003E:  CLRF   10
....................  
....................  setup_timer_2(T2_DIV_BY_16,255,1); 
003F:  MOVLW  00
0040:  MOVWF  78
0041:  IORLW  06
0042:  MOVWF  12
0043:  MOVLW  FF
0044:  BSF    03.5
0045:  MOVWF  12
....................  setup_ccp1(CCP_PWM); 
0046:  BCF    03.5
0047:  BCF    20.2
0048:  MOVF   20,W
0049:  BSF    03.5
004A:  MOVWF  07
004B:  BCF    03.5
004C:  BCF    07.2
004D:  MOVLW  0C
004E:  MOVWF  17
....................  
....................  setup_comparator(NC_NC_NC_NC); 
004F:  MOVLW  07
0050:  BSF    03.5
0051:  MOVWF  1C
0052:  MOVF   05,W
0053:  MOVWF  05
0054:  MOVLW  10
0055:  MOVWF  77
0056:  DECFSZ 77,F
0057:  GOTO   056
0058:  NOP
0059:  MOVF   1C,W
005A:  BCF    03.5
005B:  BCF    0D.6
....................  setup_vref(FALSE); 
005C:  BSF    03.5
005D:  CLRF   1D
....................  set_adc_channel(0); 
005E:  MOVLW  00
005F:  MOVWF  78
0060:  BCF    03.5
0061:  MOVF   1F,W
0062:  ANDLW  C7
0063:  IORWF  78,W
0064:  MOVWF  1F
....................  delay_us(50); 
0065:  MOVLW  53
0066:  MOVWF  77
0067:  DECFSZ 77,F
0068:  GOTO   067
....................  
....................  while(true){ 
....................  value = read_adc(); 
0069:  BSF    1F.2
006A:  BTFSC  1F.2
006B:  GOTO   06A
006C:  BSF    03.5
006D:  MOVF   1E,W
006E:  BCF    03.5
006F:  MOVWF  21
0070:  MOVF   1E,W
0071:  MOVWF  22
....................  //printf("A/D value = %2x\n\r", value); 
....................  set_pwm1_duty(value); 
0072:  MOVF   22,W
0073:  MOVWF  79
0074:  MOVF   21,W
0075:  MOVWF  78
0076:  RRF    79,F
0077:  RRF    78,F
0078:  RRF    79,F
0079:  RRF    78,F
007A:  RRF    79,F
007B:  MOVF   78,W
007C:  MOVWF  15
007D:  RRF    79,F
007E:  RRF    79,W
007F:  ANDLW  30
0080:  MOVWF  77
0081:  MOVF   17,W
0082:  ANDLW  CF
0083:  IORWF  77,W
0084:  MOVWF  17
....................  } 
0085:  GOTO   069
.................... } 
0086:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT
