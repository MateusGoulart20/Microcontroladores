CCS PCM C Compiler, Version 4.104, 5967               03-ago-23 11:06

               Filename: C:\Users\mateu\Desktop\2023-2\Microcontroladores\PCW\2 - Semaforo Botão\main.lst

               ROM used: 277 words (3%)
                         Largest free fragment is 2048
               RAM used: 7 (2%) at main() level
                         8 (2%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   018
0003:  NOP
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT 
.................... #FUSES HS 
.................... #FUSES NOPUT 
.................... #FUSES NOPROTECT 
.................... #FUSES NODEBUG 
.................... #FUSES BROWNOUT 
.................... #FUSES NOLVP 
.................... #FUSES NOCPD 
.................... #FUSES NOWRT 
....................  
.................... #use delay(clock=20000000) 
*
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
....................  
....................  
.................... void main() 
.................... { 
0018:  CLRF   04
0019:  BCF    03.7
001A:  MOVLW  1F
001B:  ANDWF  03,F
001C:  BSF    03.5
001D:  BSF    1F.0
001E:  BSF    1F.1
001F:  BSF    1F.2
0020:  BCF    1F.3
0021:  MOVLW  07
0022:  MOVWF  1C
....................  
....................    setup_adc_ports(NO_ANALOGS); 
*
0026:  BSF    03.5
0027:  BSF    1F.0
0028:  BSF    1F.1
0029:  BSF    1F.2
002A:  BCF    1F.3
....................    setup_adc(ADC_CLOCK_DIV_2); 
002B:  BCF    1F.6
002C:  BCF    03.5
002D:  BCF    1F.6
002E:  BCF    1F.7
002F:  BSF    03.5
0030:  BCF    1F.7
0031:  BCF    03.5
0032:  BSF    1F.0
....................    setup_psp(PSP_DISABLED); 
0033:  BSF    03.5
0034:  BCF    09.4
....................    setup_spi(SPI_SS_DISABLED); 
0035:  BCF    03.5
0036:  BCF    14.5
0037:  BCF    20.5
0038:  MOVF   20,W
0039:  BSF    03.5
003A:  MOVWF  07
003B:  BCF    03.5
003C:  BSF    20.4
003D:  MOVF   20,W
003E:  BSF    03.5
003F:  MOVWF  07
0040:  BCF    03.5
0041:  BCF    20.3
0042:  MOVF   20,W
0043:  BSF    03.5
0044:  MOVWF  07
0045:  MOVLW  01
0046:  BCF    03.5
0047:  MOVWF  14
0048:  MOVLW  00
0049:  BSF    03.5
004A:  MOVWF  14
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
004B:  MOVF   01,W
004C:  ANDLW  C7
004D:  IORLW  08
004E:  MOVWF  01
....................    setup_timer_1(T1_DISABLED); 
004F:  BCF    03.5
0050:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
0051:  MOVLW  00
0052:  MOVWF  78
0053:  MOVWF  12
0054:  MOVLW  00
0055:  BSF    03.5
0056:  MOVWF  12
....................    setup_comparator(NC_NC_NC_NC); 
0057:  MOVLW  07
0058:  MOVWF  1C
0059:  MOVF   05,W
005A:  MOVWF  05
005B:  MOVLW  10
005C:  MOVWF  77
005D:  DECFSZ 77,F
005E:  GOTO   05D
005F:  NOP
0060:  MOVF   1C,W
0061:  BCF    03.5
0062:  BCF    0D.6
....................    setup_vref(FALSE); 
0063:  BSF    03.5
0064:  CLRF   1D
....................  
....................    // TODO: USER CODE!! 
....................    output_low(PIN_D0); 
0065:  BCF    08.0
0066:  BCF    03.5
0067:  BCF    08.0
....................    output_low(PIN_D1); 
0068:  BSF    03.5
0069:  BCF    08.1
006A:  BCF    03.5
006B:  BCF    08.1
....................    output_high(PIN_D2); 
006C:  BSF    03.5
006D:  BCF    08.2
006E:  BCF    03.5
006F:  BSF    08.2
....................    output_low(PIN_D3); 
0070:  BSF    03.5
0071:  BCF    08.3
0072:  BCF    03.5
0073:  BCF    08.3
....................    output_low(PIN_D4); 
0074:  BSF    03.5
0075:  BCF    08.4
0076:  BCF    03.5
0077:  BCF    08.4
....................    output_low(PIN_D5); 
0078:  BSF    03.5
0079:  BCF    08.5
007A:  BCF    03.5
007B:  BCF    08.5
....................    output_low(PIN_D6); 
007C:  BSF    03.5
007D:  BCF    08.6
007E:  BCF    03.5
007F:  BCF    08.6
....................    output_low(PIN_D7); 
0080:  BSF    03.5
0081:  BCF    08.7
0082:  BCF    03.5
0083:  BCF    08.7
....................    output_low(PIN_B0); 
0084:  BSF    03.5
0085:  BCF    06.0
0086:  BCF    03.5
0087:  BCF    06.0
....................    output_low(PIN_B1); 
0088:  BSF    03.5
0089:  BCF    06.1
008A:  BCF    03.5
008B:  BCF    06.1
....................    output_high(PIN_B2); 
008C:  BSF    03.5
008D:  BCF    06.2
008E:  BCF    03.5
008F:  BSF    06.2
....................    output_low(PIN_B3); 
0090:  BSF    03.5
0091:  BCF    06.3
0092:  BCF    03.5
0093:  BCF    06.3
....................    output_low(PIN_B4); 
0094:  BSF    03.5
0095:  BCF    06.4
0096:  BCF    03.5
0097:  BCF    06.4
....................    output_low(PIN_B5); 
0098:  BSF    03.5
0099:  BCF    06.5
009A:  BCF    03.5
009B:  BCF    06.5
....................    output_low(PIN_B6); 
009C:  BSF    03.5
009D:  BCF    06.6
009E:  BCF    03.5
009F:  BCF    06.6
....................    output_low(PIN_B7); 
00A0:  BSF    03.5
00A1:  BCF    06.7
00A2:  BCF    03.5
00A3:  BCF    06.7
....................    while(true){ 
....................       if( input(PIN_A0) ){ 
00A4:  BSF    03.5
00A5:  BSF    05.0
00A6:  BCF    03.5
00A7:  BTFSS  05.0
00A8:  GOTO   0F9
....................          output_high(PIN_D7); // Controle Botão 
00A9:  BSF    03.5
00AA:  BCF    08.7
00AB:  BCF    03.5
00AC:  BSF    08.7
....................           
....................          /// Sinaleiro 
....................          // verde -> amarelo 
....................          output_low(PIN_D2); 
00AD:  BSF    03.5
00AE:  BCF    08.2
00AF:  BCF    03.5
00B0:  BCF    08.2
....................          output_high(PIN_D1); 
00B1:  BSF    03.5
00B2:  BCF    08.1
00B3:  BCF    03.5
00B4:  BSF    08.1
....................          delay_ms(3000); // 3s amarelo 
00B5:  MOVLW  0C
00B6:  MOVWF  21
00B7:  MOVLW  FA
00B8:  MOVWF  22
00B9:  CALL   004
00BA:  DECFSZ 21,F
00BB:  GOTO   0B7
....................          // amarelo -> red 
....................          output_low(PIN_D1); 
00BC:  BSF    03.5
00BD:  BCF    08.1
00BE:  BCF    03.5
00BF:  BCF    08.1
....................          output_high(PIN_D0); 
00C0:  BSF    03.5
00C1:  BCF    08.0
00C2:  BCF    03.5
00C3:  BSF    08.0
....................          delay_ms(1000); // tempo de troca 
00C4:  MOVLW  04
00C5:  MOVWF  21
00C6:  MOVLW  FA
00C7:  MOVWF  22
00C8:  CALL   004
00C9:  DECFSZ 21,F
00CA:  GOTO   0C6
....................          // verde pedrestr 
....................          output_low(PIN_B1); 
00CB:  BSF    03.5
00CC:  BCF    06.1
00CD:  BCF    03.5
00CE:  BCF    06.1
....................          output_high(PIN_B2); 
00CF:  BSF    03.5
00D0:  BCF    06.2
00D1:  BCF    03.5
00D2:  BSF    06.2
....................          delay_ms(8000); // 8s para atravessar 
00D3:  MOVLW  20
00D4:  MOVWF  21
00D5:  MOVLW  FA
00D6:  MOVWF  22
00D7:  CALL   004
00D8:  DECFSZ 21,F
00D9:  GOTO   0D5
....................          // vemrl pedest 
....................          output_low(PIN_B2); 
00DA:  BSF    03.5
00DB:  BCF    06.2
00DC:  BCF    03.5
00DD:  BCF    06.2
....................          output_high(PIN_B1); 
00DE:  BSF    03.5
00DF:  BCF    06.1
00E0:  BCF    03.5
00E1:  BSF    06.1
....................          delay_ms(1000); // tempo de troca 
00E2:  MOVLW  04
00E3:  MOVWF  21
00E4:  MOVLW  FA
00E5:  MOVWF  22
00E6:  CALL   004
00E7:  DECFSZ 21,F
00E8:  GOTO   0E4
....................          // verde carro 
....................          output_low(PIN_D0); 
00E9:  BSF    03.5
00EA:  BCF    08.0
00EB:  BCF    03.5
00EC:  BCF    08.0
....................          output_high(PIN_D2); 
00ED:  BSF    03.5
00EE:  BCF    08.2
00EF:  BCF    03.5
00F0:  BSF    08.2
....................           
....................          delay_ms(20000); // intervalo para nova parada 
00F1:  MOVLW  50
00F2:  MOVWF  21
00F3:  MOVLW  FA
00F4:  MOVWF  22
00F5:  CALL   004
00F6:  DECFSZ 21,F
00F7:  GOTO   0F3
....................           
....................       } else { 
00F8:  GOTO   0FD
....................          output_low(PIN_D7);  // Controle Botão 
00F9:  BSF    03.5
00FA:  BCF    08.7
00FB:  BCF    03.5
00FC:  BCF    08.7
....................       } 
....................        
....................       /* 
....................        // 5s Verde 
....................       output_high(PIN_D0); 
....................       delay_ms(5000); 
....................       output_low(PIN_D0); 
....................       // 3s Amarelo 
....................       output_high(PIN_D1); 
....................       delay_ms(3000);    
....................       output_low(PIN_D1); 
....................       // 1s Vermelho 
....................       output_high(PIN_D2); 
....................       delay_ms(1000); 
....................       // Troca de via A->B 
....................       output_low(PIN_B2); 
....................       // 5s Verde 
....................       output_high(PIN_B0); 
....................       delay_ms(5000); 
....................       output_low(PIN_B0); 
....................       // 3s Amarelo 
....................       output_high(PIN_B1); 
....................       delay_ms(3000); 
....................       output_low(PIN_B1); 
....................       // 1s Vermelho 
....................       output_high(PIN_B2); 
....................       delay_ms(1000); 
....................       // Troca de via B->A 
....................       output_low(PIN_D2); 
....................       */ 
....................        
....................        
....................       // Liga para conclusao 
....................       output_high(PIN_B7);  // Controle While 
00FD:  BSF    03.5
00FE:  BCF    06.7
00FF:  BCF    03.5
0100:  BSF    06.7
....................       delay_ms(500); 
0101:  MOVLW  02
0102:  MOVWF  21
0103:  MOVLW  FA
0104:  MOVWF  22
0105:  CALL   004
0106:  DECFSZ 21,F
0107:  GOTO   103
....................       output_low(PIN_B7); // Controle While 
0108:  BSF    03.5
0109:  BCF    06.7
010A:  BCF    03.5
010B:  BCF    06.7
....................       delay_ms(500); 
010C:  MOVLW  02
010D:  MOVWF  21
010E:  MOVLW  FA
010F:  MOVWF  22
0110:  CALL   004
0111:  DECFSZ 21,F
0112:  GOTO   10E
....................    } 
0113:  GOTO   0A4
.................... } 
0114:  SLEEP

Configuration Fuses:
   Word  1: 3F7A   HS NOWDT NOPUT NODEBUG NOPROTECT BROWNOUT NOLVP NOCPD NOWRT
