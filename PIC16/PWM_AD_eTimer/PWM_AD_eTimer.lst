CCS PCM C Compiler, Version 4.104, 5967               28-set-23 00:03

               Filename: C:\Users\mateu\Desktop\2023-2\Microcontroladores\PCW\PWM_AD_eTimer\PWM_AD_eTimer.lst

               ROM used: 529 words (6%)
                         Largest free fragment is 2048
               RAM used: 26 (7%) at main() level
                         46 (12%) worst case
               Stack:    3 worst case (1 in main + 2 for interrupts)

*
0000:  MOVLW  01
0001:  MOVWF  0A
0002:  GOTO   16A
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.0
001A:  GOTO   01D
001B:  BTFSC  0C.0
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   046
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device adc=8 
.................... #FUSES NOWDT //No Watch Dog Timer 
.................... #FUSES HS //High speed Osc (> 4mhz FOR PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOPUT //No Power Up Timer 
.................... #FUSES NOPROTECT //Code not protected from reading 
.................... #FUSES NODEBUG //No Debug mode FOR ICD 
.................... #FUSES NOBROWNOUT //No brownout reset 
.................... #FUSES NOLVP //No low voltage prgming, B3(PIC16) or B5(PIC18) used FOR I/O 
.................... #FUSES NOCPD //No EE protection 
.................... #FUSES NOWRT //Program memory not write protected 
.................... #FUSES RESERVED //Used to set the reserved FUSE bits 
.................... #use delay(clock=20000000) 
*
0154:  MOVLW  34
0155:  MOVWF  04
0156:  BCF    03.7
0157:  MOVF   00,W
0158:  BTFSC  03.2
0159:  GOTO   167
015A:  MOVLW  06
015B:  MOVWF  78
015C:  CLRF   77
015D:  DECFSZ 77,F
015E:  GOTO   15D
015F:  DECFSZ 78,F
0160:  GOTO   15C
0161:  MOVLW  7B
0162:  MOVWF  77
0163:  DECFSZ 77,F
0164:  GOTO   163
0165:  DECFSZ 00,F
0166:  GOTO   15A
0167:  BCF    0A.3
0168:  BCF    0A.4
0169:  GOTO   20F (RETURN)
....................  
....................    INT1 h_l=0; 
....................  
.................... unsigned INT16 ton=0,toff=0,pwm=40; 
....................  
.................... #INT_TIMER1 
.................... void TIMER1_isr(VOID) 
.................... { 
....................    IF(h_l==0) 
*
0046:  BTFSC  27.0
0047:  GOTO   06D
....................    { 
....................       //Ton 
....................       set_timer1(65536-pwm*50);//(65536-(pwm*10)/0.2)//63536 
0048:  MOVF   2D,W
0049:  MOVWF  45
004A:  MOVF   2C,W
004B:  MOVWF  44
004C:  CLRF   47
004D:  MOVLW  32
004E:  MOVWF  46
004F:  CALL   031
0050:  MOVF   78,W
0051:  SUBLW  00
0052:  MOVWF  42
0053:  CLRF   43
0054:  MOVF   79,W
0055:  BTFSS  03.0
0056:  INCFSZ 79,W
0057:  SUBWF  43,F
0058:  MOVLW  01
0059:  MOVWF  44
005A:  MOVLW  00
005B:  BTFSS  03.0
005C:  MOVLW  01
005D:  SUBWF  44,F
005E:  CLRF   45
005F:  MOVLW  00
0060:  BTFSS  03.0
0061:  MOVLW  01
0062:  SUBWF  45,F
0063:  MOVF   43,W
0064:  MOVWF  0F
0065:  MOVF   42,W
0066:  MOVWF  0E
....................       h_l=1; 
0067:  BSF    27.0
....................       output_high(PIN_D0); 
0068:  BSF    03.5
0069:  BCF    08.0
006A:  BCF    03.5
006B:  BSF    08.0
....................       }ELSE{//Toff 
006C:  GOTO   099
....................       set_timer1(65536-(100-pwm)*50);//(65536-((100-pwm)*10)/0.2)//62536 
006D:  MOVF   2C,W
006E:  SUBLW  64
006F:  MOVWF  42
0070:  CLRF   43
0071:  MOVF   2D,W
0072:  BTFSS  03.0
0073:  INCFSZ 2D,W
0074:  SUBWF  43,F
0075:  MOVF   43,W
0076:  MOVWF  45
0077:  MOVF   42,W
0078:  MOVWF  44
0079:  CLRF   47
007A:  MOVLW  32
007B:  MOVWF  46
007C:  CALL   031
007D:  MOVF   78,W
007E:  SUBLW  00
007F:  MOVWF  42
0080:  CLRF   43
0081:  MOVF   79,W
0082:  BTFSS  03.0
0083:  INCFSZ 79,W
0084:  SUBWF  43,F
0085:  MOVLW  01
0086:  MOVWF  44
0087:  MOVLW  00
0088:  BTFSS  03.0
0089:  MOVLW  01
008A:  SUBWF  44,F
008B:  CLRF   45
008C:  MOVLW  00
008D:  BTFSS  03.0
008E:  MOVLW  01
008F:  SUBWF  45,F
0090:  MOVF   43,W
0091:  MOVWF  0F
0092:  MOVF   42,W
0093:  MOVWF  0E
....................       h_l=0; 
0094:  BCF    27.0
....................       output_low(PIN_D0); 
0095:  BSF    03.5
0096:  BCF    08.0
0097:  BCF    03.5
0098:  BCF    08.0
....................    } 
.................... } 
....................  
0099:  BCF    0C.0
009A:  BCF    0A.3
009B:  BCF    0A.4
009C:  GOTO   01D
.................... void main() 
.................... { 
*
016A:  CLRF   04
016B:  BCF    03.7
016C:  MOVLW  1F
016D:  ANDWF  03,F
016E:  BCF    27.0
016F:  CLRF   29
0170:  CLRF   28
0171:  CLRF   2B
0172:  CLRF   2A
0173:  CLRF   2D
0174:  MOVLW  28
0175:  MOVWF  2C
0176:  BSF    03.5
0177:  BSF    1F.0
0178:  BSF    1F.1
0179:  BSF    1F.2
017A:  BCF    1F.3
017B:  MOVLW  07
017C:  MOVWF  1C
*
0180:  CLRF   2F
0181:  CLRF   33
0182:  CLRF   32
0183:  CLRF   31
0184:  CLRF   30
....................    UNSIGNED int valor=0; 
....................    FLOAT tensao=0; 
....................    setup_adc_ports(AN0);//ajusta a porta A0 para entrada analógica 
0185:  BSF    03.5
0186:  BCF    1F.0
0187:  BSF    1F.1
0188:  BSF    1F.2
0189:  BSF    1F.3
....................    setup_adc(ADC_CLOCK_DIV_16); 
018A:  BSF    1F.6
018B:  BCF    03.5
018C:  BSF    1F.6
018D:  BCF    1F.7
018E:  BSF    03.5
018F:  BCF    1F.7
0190:  BCF    03.5
0191:  BSF    1F.0
....................    setup_psp(PSP_DISABLED); 
0192:  BSF    03.5
0193:  BCF    09.4
....................    setup_spi(SPI_SS_DISABLED); 
0194:  BCF    03.5
0195:  BCF    14.5
0196:  BCF    2E.5
0197:  MOVF   2E,W
0198:  BSF    03.5
0199:  MOVWF  07
019A:  BCF    03.5
019B:  BSF    2E.4
019C:  MOVF   2E,W
019D:  BSF    03.5
019E:  MOVWF  07
019F:  BCF    03.5
01A0:  BCF    2E.3
01A1:  MOVF   2E,W
01A2:  BSF    03.5
01A3:  MOVWF  07
01A4:  MOVLW  01
01A5:  BCF    03.5
01A6:  MOVWF  14
01A7:  MOVLW  00
01A8:  BSF    03.5
01A9:  MOVWF  14
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
01AA:  MOVF   01,W
01AB:  ANDLW  C7
01AC:  IORLW  08
01AD:  MOVWF  01
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
01AE:  MOVLW  85
01AF:  BCF    03.5
01B0:  MOVWF  10
....................    set_timer1(62536); 
01B1:  MOVLW  F4
01B2:  MOVWF  0F
01B3:  MOVLW  48
01B4:  MOVWF  0E
....................    setup_timer_2(T2_DISABLED,0,1); 
01B5:  MOVLW  00
01B6:  MOVWF  78
01B7:  MOVWF  12
01B8:  MOVLW  00
01B9:  BSF    03.5
01BA:  MOVWF  12
....................    setup_comparator(NC_NC_NC_NC); 
01BB:  MOVLW  07
01BC:  MOVWF  1C
01BD:  MOVF   05,W
01BE:  MOVWF  05
01BF:  MOVLW  10
01C0:  MOVWF  77
01C1:  DECFSZ 77,F
01C2:  GOTO   1C1
01C3:  NOP
01C4:  MOVF   1C,W
01C5:  BCF    03.5
01C6:  BCF    0D.6
....................    setup_vref(FALSE); 
01C7:  BSF    03.5
01C8:  CLRF   1D
....................    enable_interrupts(INT_TIMER1); 
01C9:  BSF    0C.0
....................    enable_interrupts(GLOBAL); 
01CA:  MOVLW  C0
01CB:  BCF    03.5
01CC:  IORWF  0B,F
....................    output_low(PIN_D0); 
01CD:  BSF    03.5
01CE:  BCF    08.0
01CF:  BCF    03.5
01D0:  BCF    08.0
....................    set_adc_channel(0); 
01D1:  MOVLW  00
01D2:  MOVWF  78
01D3:  MOVF   1F,W
01D4:  ANDLW  C7
01D5:  IORWF  78,W
01D6:  MOVWF  1F
....................    delay_us(50); 
01D7:  MOVLW  53
01D8:  MOVWF  77
01D9:  DECFSZ 77,F
01DA:  GOTO   1D9
....................  
....................    WHILE(true) 
....................    { 
....................       valor=read_adc()*0.3922;//(100/255)=0,3922 
01DB:  BSF    1F.2
01DC:  BTFSC  1F.2
01DD:  GOTO   1DC
01DE:  MOVF   1E,W
01DF:  CLRF   36
01E0:  MOVWF  35
01E1:  GOTO   09D
01E2:  MOVF   7A,W
01E3:  MOVWF  38
01E4:  MOVF   79,W
01E5:  MOVWF  37
01E6:  MOVF   78,W
01E7:  MOVWF  36
01E8:  MOVF   77,W
01E9:  MOVWF  35
01EA:  MOVLW  70
01EB:  MOVWF  3C
01EC:  MOVLW  CE
01ED:  MOVWF  3B
01EE:  MOVLW  48
01EF:  MOVWF  3A
01F0:  MOVLW  7D
01F1:  MOVWF  39
01F2:  GOTO   0BC
01F3:  MOVF   7A,W
01F4:  MOVWF  37
01F5:  MOVF   79,W
01F6:  MOVWF  36
01F7:  MOVF   78,W
01F8:  MOVWF  35
01F9:  MOVF   77,W
01FA:  MOVWF  34
01FB:  GOTO   133
01FC:  MOVF   78,W
01FD:  MOVWF  2F
....................       IF(valor>99)valor=100; 
01FE:  MOVF   2F,W
01FF:  SUBLW  63
0200:  BTFSC  03.0
0201:  GOTO   204
0202:  MOVLW  64
0203:  MOVWF  2F
....................       IF(valor<1)valor=1; 
0204:  MOVF   2F,F
0205:  BTFSS  03.2
0206:  GOTO   209
0207:  MOVLW  01
0208:  MOVWF  2F
....................       pwm=valor; 
0209:  CLRF   2D
020A:  MOVF   2F,W
020B:  MOVWF  2C
....................       delay_ms(100); 
020C:  MOVLW  64
020D:  MOVWF  34
020E:  GOTO   154
....................    } 
020F:  GOTO   1DB
.................... } 
....................  
0210:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT
