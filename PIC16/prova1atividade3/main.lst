CCS PCM C Compiler, Version 4.104, 5967               03-out-23 12:02

               Filename: C:\Users\mateu\Desktop\2023-2\Microcontroladores\PCW\prova1atividade3\main.lst

               ROM used: 213 words (3%)
                         Largest free fragment is 2048
               RAM used: 7 (2%) at main() level
                         10 (3%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   018
0003:  NOP
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES HS                       //High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES RESERVED                 //Used to set the reserved FUSE bits 
....................  
.................... #use delay(clock=20000000) 
*
0004:  MOVLW  24
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
....................  
.................... void main() 
.................... { 
0018:  CLRF   04
0019:  BCF    03.7
001A:  MOVLW  1F
001B:  ANDWF  03,F
001C:  MOVLW  81
001D:  BSF    03.5
001E:  MOVWF  19
001F:  MOVLW  A6
0020:  MOVWF  18
0021:  MOVLW  90
0022:  BCF    03.5
0023:  MOVWF  18
0024:  BSF    03.5
0025:  BSF    1F.0
0026:  BSF    1F.1
0027:  BSF    1F.2
0028:  BCF    1F.3
0029:  MOVLW  07
002A:  MOVWF  1C
....................    setup_adc_ports(AN0_AN1_AN3); 
*
002E:  BSF    03.5
002F:  BCF    1F.0
0030:  BCF    1F.1
0031:  BSF    1F.2
0032:  BCF    1F.3
....................       setup_adc(ADC_CLOCK_DIV_16); 
0033:  BSF    1F.6
0034:  BCF    03.5
0035:  BSF    1F.6
0036:  BCF    1F.7
0037:  BSF    03.5
0038:  BCF    1F.7
0039:  BCF    03.5
003A:  BSF    1F.0
....................       setup_psp(PSP_DISABLED); 
003B:  BSF    03.5
003C:  BCF    09.4
....................       setup_spi(SPI_SS_DISABLED); 
003D:  BCF    03.5
003E:  BCF    14.5
003F:  BCF    20.5
0040:  MOVF   20,W
0041:  BSF    03.5
0042:  MOVWF  07
0043:  BCF    03.5
0044:  BSF    20.4
0045:  MOVF   20,W
0046:  BSF    03.5
0047:  MOVWF  07
0048:  BCF    03.5
0049:  BCF    20.3
004A:  MOVF   20,W
004B:  BSF    03.5
004C:  MOVWF  07
004D:  MOVLW  01
004E:  BCF    03.5
004F:  MOVWF  14
0050:  MOVLW  00
0051:  BSF    03.5
0052:  MOVWF  14
....................       setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
0053:  MOVF   01,W
0054:  ANDLW  C7
0055:  IORLW  08
0056:  MOVWF  01
....................       setup_timer_1(T1_DISABLED); 
0057:  BCF    03.5
0058:  CLRF   10
....................       setup_timer_2(T2_DIV_BY_16,255,1); 
0059:  MOVLW  00
005A:  MOVWF  78
005B:  IORLW  06
005C:  MOVWF  12
005D:  MOVLW  FF
005E:  BSF    03.5
005F:  MOVWF  12
....................       setup_ccp1(CCP_PWM); 
0060:  BCF    03.5
0061:  BCF    20.2
0062:  MOVF   20,W
0063:  BSF    03.5
0064:  MOVWF  07
0065:  BCF    03.5
0066:  BCF    07.2
0067:  MOVLW  0C
0068:  MOVWF  17
....................        
....................       setup_comparator(NC_NC_NC_NC); 
0069:  MOVLW  07
006A:  BSF    03.5
006B:  MOVWF  1C
006C:  MOVF   05,W
006D:  MOVWF  05
006E:  MOVLW  10
006F:  MOVWF  77
0070:  DECFSZ 77,F
0071:  GOTO   070
0072:  NOP
0073:  MOVF   1C,W
0074:  BCF    03.5
0075:  BCF    0D.6
....................       setup_vref(FALSE); 
0076:  BSF    03.5
0077:  CLRF   1D
....................        
....................       set_adc_channel(0);delay_ms(50); 
0078:  MOVLW  00
0079:  MOVWF  78
007A:  BCF    03.5
007B:  MOVF   1F,W
007C:  ANDLW  C7
007D:  IORWF  78,W
007E:  MOVWF  1F
007F:  MOVLW  32
0080:  MOVWF  24
0081:  CALL   004
....................    // TODO: USER CODE!! 
....................    int1 movimento = 0, lado = 1;  
....................    int8 percurso =0; 
0082:  BCF    21.0
0083:  BSF    21.1
0084:  CLRF   22
....................    // movimento{0:parado;1:movimentando} 
....................    // lado{0:esquerda;1:direira} 
....................    while(true){ 
....................       if(!(input(PIN_B0))){ // botão clicado 
0085:  BSF    03.5
0086:  BSF    06.0
0087:  BCF    03.5
0088:  BTFSC  06.0
0089:  GOTO   09A
....................          if(movimento){ // se andando -> para e muda lado 
008A:  BTFSS  21.0
008B:  GOTO   091
....................             movimento = !movimento; 
008C:  MOVLW  01
008D:  XORWF  21,F
....................             lado = !lado; 
008E:  MOVLW  02
008F:  XORWF  21,F
....................          }else{ 
0090:  GOTO   093
....................             movimento = !movimento; // se paradao -> anda 
0091:  MOVLW  01
0092:  XORWF  21,F
....................          } 
....................          delay_ms(500); 
0093:  MOVLW  02
0094:  MOVWF  23
0095:  MOVLW  FA
0096:  MOVWF  24
0097:  CALL   004
0098:  DECFSZ 23,F
0099:  GOTO   095
....................       } 
....................       if(movimento){ 
009A:  BTFSS  21.0
009B:  GOTO   0A6
....................          percurso += -1+2*lado; 
009C:  MOVLW  00
009D:  BTFSC  21.1
009E:  MOVLW  01
009F:  MOVWF  77
00A0:  BCF    03.0
00A1:  RLF    77,F
00A2:  MOVF   77,W
00A3:  ADDLW  FF
00A4:  ADDWF  22,W
00A5:  MOVWF  22
....................          /* 
....................          if(lado){ 
....................             percurso++; 
....................          }else{ 
....................             percurso--; 
....................          }*/ 
....................       } 
....................       if(percurso<1||percurso>254){ 
00A6:  MOVF   22,F
00A7:  BTFSC  03.2
00A8:  GOTO   0AD
00A9:  MOVF   22,W
00AA:  SUBLW  FE
00AB:  BTFSC  03.0
00AC:  GOTO   0B3
....................          if(movimento){ 
00AD:  BTFSS  21.0
00AE:  GOTO   0B3
....................             movimento = !movimento; 
00AF:  MOVLW  01
00B0:  XORWF  21,F
....................             lado = !lado; 
00B1:  MOVLW  02
00B2:  XORWF  21,F
....................          } 
....................           
....................       } 
....................       // notas leds 
....................       if(lado){ 
00B3:  BTFSS  21.1
00B4:  GOTO   0BA
....................          output_high(PIN_B1); 
00B5:  BSF    03.5
00B6:  BCF    06.1
00B7:  BCF    03.5
00B8:  BSF    06.1
....................       }else{ 
00B9:  GOTO   0BE
....................          output_low(PIN_B1); 
00BA:  BSF    03.5
00BB:  BCF    06.1
00BC:  BCF    03.5
00BD:  BCF    06.1
....................       } 
....................       if(movimento){ 
00BE:  BTFSS  21.0
00BF:  GOTO   0C5
....................          output_high(PIN_B2); 
00C0:  BSF    03.5
00C1:  BCF    06.2
00C2:  BCF    03.5
00C3:  BSF    06.2
....................       }else{ 
00C4:  GOTO   0C9
....................          output_low(PIN_B2); 
00C5:  BSF    03.5
00C6:  BCF    06.2
00C7:  BCF    03.5
00C8:  BCF    06.2
....................       } 
....................       output_d(percurso); 
00C9:  BSF    03.5
00CA:  CLRF   08
00CB:  BCF    03.5
00CC:  MOVF   22,W
00CD:  MOVWF  08
....................       set_pwm1_duty(percurso); 
00CE:  MOVF   22,W
00CF:  MOVWF  15
....................       delay_ms(10); 
00D0:  MOVLW  0A
00D1:  MOVWF  24
00D2:  CALL   004
....................    } 
00D3:  GOTO   085
.................... } 
00D4:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT
